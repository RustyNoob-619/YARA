from configparser import ConfigParser
import requests
import json
import os 

config = ConfigParser()
config.read("config.ini")
ini = config['Default']

malware_search = ini['malware_search']
number_of_samples = int(ini['number_of_samples'])
API_KEY = ini['API-KEY']

headers = {'API-KEY': API_KEY}

signature_malware = {'query' : 'get_siginfo',
                    'signature' : malware_search,  
                    'limit' : number_of_samples}

def directory_check(name):
    if not os.path.exists(name):
        os.makedirs(name)

def signature_query(malware_name, head):
    try:
        signature_response = requests.post('https://mb-api.abuse.ch/api/v1/', data=malware_name, headers=head)
        api_data = signature_response.json()
        return api_data
    except Exception as error:
        print("Error", error)

def malware_directory(hash, response):
    file_name = hash + ".zip" 
    CompleteName = os.path.join(ini['malware_search'], file_name)
    with open(CompleteName, 'wb') as f:
        f.write(response.content)

def download_samples():
    try:
        query = signature_query(signature_malware, headers)
        for item in query["data"]:
            file_hash = item["sha256_hash"]
            download_malware = {'query' : 'get_file', 'sha256_hash' : file_hash}
            download_response = requests.post('https://mb-api.abuse.ch/api/v1/', data=download_malware, headers=headers)
            malware_directory(file_hash,download_response)
    except Exception as error:
        print("Error", error)
    
directory_check(malware_search)  
download_samples()

    

